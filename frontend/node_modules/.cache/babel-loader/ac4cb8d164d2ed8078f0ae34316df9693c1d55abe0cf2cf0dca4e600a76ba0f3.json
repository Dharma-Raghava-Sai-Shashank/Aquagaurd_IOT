{"ast":null,"code":"var _jsxFileName = \"/Users/shashank/Downloads/Reddy/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Container, Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Dialog, DialogTitle, DialogContent, DialogActions, Button, Slider, Box, TextField, Stack } from '@mui/material';\n\n/**\n * Example initial devices array.\n * In real life, you might fetch these from an API or a database.\n */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialDevices = [{\n  Did: 'DEV-001',\n  location: 'Pump Station A',\n  waterFlow: 50,\n  pressure: 80,\n  temperature: 22\n}, {\n  Did: 'DEV-002',\n  location: 'Pump Station B',\n  waterFlow: 60,\n  pressure: 90,\n  temperature: 24\n}, {\n  Did: 'DEV-003',\n  location: 'Reservoir West',\n  waterFlow: 70,\n  pressure: 100,\n  temperature: 26\n}, {\n  Did: 'DEV-004',\n  location: 'Reservoir East',\n  waterFlow: 80,\n  pressure: 110,\n  temperature: 28\n}];\nfunction App() {\n  _s();\n  const [devices, setDevices] = useState(initialDevices);\n\n  // States for Editing Sensor Data Dialog\n  const [openDialog, setOpenDialog] = useState(false);\n  const [selectedDeviceIndex, setSelectedDeviceIndex] = useState(null);\n\n  // States for Adding a New Device\n  const [openAddDialog, setOpenAddDialog] = useState(false);\n  const [newDevice, setNewDevice] = useState({\n    Did: '',\n    location: '',\n    waterFlow: 0,\n    pressure: 0,\n    temperature: 0\n  });\n\n  // ---------------------------\n  // (1) Display / Table\n  // ---------------------------\n  const handleRowClick = index => {\n    setSelectedDeviceIndex(index);\n    setOpenDialog(true);\n  };\n\n  // ---------------------------\n  // (2) Close Sensor Edit Dialog\n  // ---------------------------\n  const handleDialogClose = () => {\n    setOpenDialog(false);\n  };\n\n  // ---------------------------\n  // (3) Sensor Slider Handling\n  // ---------------------------\n  const handleSliderChange = (field, newValue) => {\n    setDevices(prevDevices => {\n      const updated = [...prevDevices];\n      updated[selectedDeviceIndex] = {\n        ...updated[selectedDeviceIndex],\n        [field]: newValue\n      };\n      return updated;\n    });\n  };\n\n  /**\n   * Real-time simulation (random updates).\n   * If you want to remove randomization, you can remove/modify this effect.\n   */\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setDevices(prevDevices => prevDevices.map(device => {\n        return {\n          ...device,\n          waterFlow: parseFloat((device.waterFlow + (Math.random() * 2 - 1)).toFixed(2)),\n          pressure: parseFloat((device.pressure + (Math.random() * 2 - 1)).toFixed(2)),\n          temperature: parseFloat((device.temperature + (Math.random() * 2 - 1)).toFixed(2))\n        };\n      }));\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Convenience reference for the device being edited\n  const selectedDevice = selectedDeviceIndex !== null ? devices[selectedDeviceIndex] : null;\n\n  // ---------------------------\n  // (4) \"Add Device\" Dialog\n  // ---------------------------\n  const handleOpenAddDialog = () => {\n    setNewDevice({\n      Did: '',\n      location: '',\n      waterFlow: 0,\n      pressure: 0,\n      temperature: 0\n    });\n    setOpenAddDialog(true);\n  };\n  const handleCloseAddDialog = () => {\n    setOpenAddDialog(false);\n  };\n\n  // This function adds the new device to state\n  // and optionally calls a server endpoint to store it in MongoDB\n  const handleAddDevice = () => {\n    // 1) Local: Add to state\n    setDevices(prevDevices => [...prevDevices, newDevice]);\n\n    // 2) (Optional) Post to server (example)\n    // fetch('http://localhost:5000/devices', {\n    //   method: 'POST',\n    //   headers: {\n    //     'Content-Type': 'application/json',\n    //   },\n    //   body: JSON.stringify(newDevice),\n    // })\n    //   .then((res) => res.json())\n    //   .then((data) => {\n    //     console.log('Server response:', data);\n    //   })\n    //   .catch((error) => console.error('Error creating device:', error));\n\n    // Close the dialog\n    setOpenAddDialog(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    sx: {\n      marginTop: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Water Management System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      sx: {\n        mb: 2\n      },\n      onClick: handleOpenAddDialog,\n      children: \"Add Device\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Device ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Water Flow (L/s)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Pressure (psi)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Temperature (\\xB0C)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: devices.map((device, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n            hover: true,\n            style: {\n              cursor: 'pointer'\n            },\n            onClick: () => handleRowClick(index),\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: device.Did\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: device.location\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: device.waterFlow\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: device.pressure\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: device.temperature\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this)]\n          }, device.Did, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDialog,\n      onClose: handleDialogClose,\n      fullWidth: true,\n      maxWidth: \"sm\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Adjust Sensor Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        dividers: true,\n        children: selectedDevice && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              children: \"Water Flow (L/s)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Slider, {\n              value: selectedDevice.waterFlow,\n              min: 0,\n              max: 500,\n              step: 1,\n              onChange: (e, val) => handleSliderChange('waterFlow', val)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: [\"Current: \", selectedDevice.waterFlow.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 4\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              children: \"Pressure (psi)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Slider, {\n              value: selectedDevice.pressure,\n              min: 0,\n              max: 150,\n              step: 1,\n              onChange: (e, val) => handleSliderChange('pressure', val)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: [\"Current: \", selectedDevice.pressure.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 4\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              children: \"Temperature (\\xB0C)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Slider, {\n              value: selectedDevice.temperature,\n              min: 0,\n              max: 100,\n              step: 1,\n              onChange: (e, val) => handleSliderChange('temperature', val)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: [\"Current: \", selectedDevice.temperature.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleDialogClose,\n          variant: \"contained\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openAddDialog,\n      onClose: handleCloseAddDialog,\n      fullWidth: true,\n      maxWidth: \"sm\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Add New Device\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        dividers: true,\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 2,\n          sx: {\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Device ID\",\n            value: newDevice.Did,\n            onChange: e => setNewDevice({\n              ...newDevice,\n              Did: e.target.value\n            }),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Location\",\n            value: newDevice.location,\n            onChange: e => setNewDevice({\n              ...newDevice,\n              location: e.target.value\n            }),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Water Flow (L/s)\",\n            type: \"number\",\n            value: newDevice.waterFlow,\n            onChange: e => setNewDevice({\n              ...newDevice,\n              waterFlow: parseFloat(e.target.value) || 0\n            }),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Pressure (psi)\",\n            type: \"number\",\n            value: newDevice.pressure,\n            onChange: e => setNewDevice({\n              ...newDevice,\n              pressure: parseFloat(e.target.value) || 0\n            }),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Temperature (\\xB0C)\",\n            type: \"number\",\n            value: newDevice.temperature,\n            onChange: e => setNewDevice({\n              ...newDevice,\n              temperature: parseFloat(e.target.value) || 0\n            }),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseAddDialog,\n          variant: \"outlined\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleAddDevice,\n          variant: \"contained\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"lvMlKpWgpcqkabDtgmwcQrFquUY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Container","Typography","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Dialog","DialogTitle","DialogContent","DialogActions","Button","Slider","Box","TextField","Stack","jsxDEV","_jsxDEV","Fragment","_Fragment","initialDevices","Did","location","waterFlow","pressure","temperature","App","_s","devices","setDevices","openDialog","setOpenDialog","selectedDeviceIndex","setSelectedDeviceIndex","openAddDialog","setOpenAddDialog","newDevice","setNewDevice","handleRowClick","index","handleDialogClose","handleSliderChange","field","newValue","prevDevices","updated","interval","setInterval","map","device","parseFloat","Math","random","toFixed","clearInterval","selectedDevice","handleOpenAddDialog","handleCloseAddDialog","handleAddDevice","maxWidth","sx","marginTop","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","mb","onClick","component","hover","style","cursor","open","onClose","fullWidth","dividers","mt","value","min","max","step","onChange","e","val","spacing","label","target","type","_c","$RefreshReg$"],"sources":["/Users/shashank/Downloads/Reddy/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  Container,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  Slider,\n  Box,\n  TextField,\n  Stack\n} from '@mui/material';\n\n/**\n * Example initial devices array.\n * In real life, you might fetch these from an API or a database.\n */\nconst initialDevices = [\n  { Did: 'DEV-001', location: 'Pump Station A', waterFlow: 50, pressure: 80, temperature: 22 },\n  { Did: 'DEV-002', location: 'Pump Station B', waterFlow: 60, pressure: 90, temperature: 24 },\n  { Did: 'DEV-003', location: 'Reservoir West', waterFlow: 70, pressure: 100, temperature: 26 },\n  { Did: 'DEV-004', location: 'Reservoir East', waterFlow: 80, pressure: 110, temperature: 28 },\n];\n\nfunction App() {\n  const [devices, setDevices] = useState(initialDevices);\n\n  // States for Editing Sensor Data Dialog\n  const [openDialog, setOpenDialog] = useState(false);\n  const [selectedDeviceIndex, setSelectedDeviceIndex] = useState(null);\n\n  // States for Adding a New Device\n  const [openAddDialog, setOpenAddDialog] = useState(false);\n  const [newDevice, setNewDevice] = useState({\n    Did: '',\n    location: '',\n    waterFlow: 0,\n    pressure: 0,\n    temperature: 0\n  });\n\n  // ---------------------------\n  // (1) Display / Table\n  // ---------------------------\n  const handleRowClick = (index) => {\n    setSelectedDeviceIndex(index);\n    setOpenDialog(true);\n  };\n\n  // ---------------------------\n  // (2) Close Sensor Edit Dialog\n  // ---------------------------\n  const handleDialogClose = () => {\n    setOpenDialog(false);\n  };\n\n  // ---------------------------\n  // (3) Sensor Slider Handling\n  // ---------------------------\n  const handleSliderChange = (field, newValue) => {\n    setDevices((prevDevices) => {\n      const updated = [...prevDevices];\n      updated[selectedDeviceIndex] = {\n        ...updated[selectedDeviceIndex],\n        [field]: newValue\n      };\n      return updated;\n    });\n  };\n\n  /**\n   * Real-time simulation (random updates).\n   * If you want to remove randomization, you can remove/modify this effect.\n   */\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setDevices((prevDevices) =>\n        prevDevices.map((device) => {\n          return {\n            ...device,\n            waterFlow: parseFloat((device.waterFlow + (Math.random() * 2 - 1)).toFixed(2)),\n            pressure: parseFloat((device.pressure + (Math.random() * 2 - 1)).toFixed(2)),\n            temperature: parseFloat((device.temperature + (Math.random() * 2 - 1)).toFixed(2)),\n          };\n        })\n      );\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  // Convenience reference for the device being edited\n  const selectedDevice = selectedDeviceIndex !== null\n    ? devices[selectedDeviceIndex]\n    : null;\n\n  // ---------------------------\n  // (4) \"Add Device\" Dialog\n  // ---------------------------\n  const handleOpenAddDialog = () => {\n    setNewDevice({\n      Did: '',\n      location: '',\n      waterFlow: 0,\n      pressure: 0,\n      temperature: 0\n    });\n    setOpenAddDialog(true);\n  };\n\n  const handleCloseAddDialog = () => {\n    setOpenAddDialog(false);\n  };\n\n  // This function adds the new device to state\n  // and optionally calls a server endpoint to store it in MongoDB\n  const handleAddDevice = () => {\n    // 1) Local: Add to state\n    setDevices((prevDevices) => [...prevDevices, newDevice]);\n\n    // 2) (Optional) Post to server (example)\n    // fetch('http://localhost:5000/devices', {\n    //   method: 'POST',\n    //   headers: {\n    //     'Content-Type': 'application/json',\n    //   },\n    //   body: JSON.stringify(newDevice),\n    // })\n    //   .then((res) => res.json())\n    //   .then((data) => {\n    //     console.log('Server response:', data);\n    //   })\n    //   .catch((error) => console.error('Error creating device:', error));\n\n    // Close the dialog\n    setOpenAddDialog(false);\n  };\n\n  return (\n    <Container maxWidth=\"md\" sx={{ marginTop: 4 }}>\n      <Typography variant=\"h4\" gutterBottom>\n        Water Management System\n      </Typography>\n\n      {/* Button to open \"Add Device\" dialog */}\n      <Button \n        variant=\"contained\" \n        sx={{ mb: 2 }}\n        onClick={handleOpenAddDialog}\n      >\n        Add Device\n      </Button>\n\n      {/* Table of current devices */}\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell><strong>Device ID</strong></TableCell>\n              <TableCell><strong>Location</strong></TableCell>\n              <TableCell><strong>Water Flow (L/s)</strong></TableCell>\n              <TableCell><strong>Pressure (psi)</strong></TableCell>\n              <TableCell><strong>Temperature (°C)</strong></TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {devices.map((device, index) => (\n              <TableRow\n                key={device.Did}\n                hover\n                style={{ cursor: 'pointer' }}\n                onClick={() => handleRowClick(index)}\n              >\n                <TableCell>{device.Did}</TableCell>\n                <TableCell>{device.location}</TableCell>\n                <TableCell>{device.waterFlow}</TableCell>\n                <TableCell>{device.pressure}</TableCell>\n                <TableCell>{device.temperature}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      {/* --------------------------\n          Dialog for adjusting sensor fields\n         -------------------------- */}\n      <Dialog open={openDialog} onClose={handleDialogClose} fullWidth maxWidth=\"sm\">\n        <DialogTitle>Adjust Sensor Data</DialogTitle>\n        <DialogContent dividers>\n          {selectedDevice && (\n            <>\n              <Box sx={{ mt: 2 }}>\n                <Typography gutterBottom>Water Flow (L/s)</Typography>\n                <Slider\n                  value={selectedDevice.waterFlow}\n                  min={0}\n                  max={500}\n                  step={1}\n                  onChange={(e, val) => handleSliderChange('waterFlow', val)}\n                />\n                <Typography variant=\"body2\">\n                  Current: {selectedDevice.waterFlow.toFixed(2)}\n                </Typography>\n              </Box>\n\n              <Box sx={{ mt: 4 }}>\n                <Typography gutterBottom>Pressure (psi)</Typography>\n                <Slider\n                  value={selectedDevice.pressure}\n                  min={0}\n                  max={150}\n                  step={1}\n                  onChange={(e, val) => handleSliderChange('pressure', val)}\n                />\n                <Typography variant=\"body2\">\n                  Current: {selectedDevice.pressure.toFixed(2)}\n                </Typography>\n              </Box>\n\n              <Box sx={{ mt: 4 }}>\n                <Typography gutterBottom>Temperature (°C)</Typography>\n                <Slider\n                  value={selectedDevice.temperature}\n                  min={0}\n                  max={100}\n                  step={1}\n                  onChange={(e, val) => handleSliderChange('temperature', val)}\n                />\n                <Typography variant=\"body2\">\n                  Current: {selectedDevice.temperature.toFixed(2)}\n                </Typography>\n              </Box>\n            </>\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleDialogClose} variant=\"contained\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* --------------------------\n          Dialog for ADDING a new device\n         -------------------------- */}\n      <Dialog open={openAddDialog} onClose={handleCloseAddDialog} fullWidth maxWidth=\"sm\">\n        <DialogTitle>Add New Device</DialogTitle>\n        <DialogContent dividers>\n          {/* Input fields for new device */}\n          <Stack spacing={2} sx={{ mt: 2 }}>\n            <TextField\n              label=\"Device ID\"\n              value={newDevice.Did}\n              onChange={(e) => setNewDevice({ ...newDevice, Did: e.target.value })}\n              fullWidth\n            />\n            <TextField\n              label=\"Location\"\n              value={newDevice.location}\n              onChange={(e) => setNewDevice({ ...newDevice, location: e.target.value })}\n              fullWidth\n            />\n            <TextField\n              label=\"Water Flow (L/s)\"\n              type=\"number\"\n              value={newDevice.waterFlow}\n              onChange={(e) => setNewDevice({ ...newDevice, waterFlow: parseFloat(e.target.value) || 0 })}\n              fullWidth\n            />\n            <TextField\n              label=\"Pressure (psi)\"\n              type=\"number\"\n              value={newDevice.pressure}\n              onChange={(e) => setNewDevice({ ...newDevice, pressure: parseFloat(e.target.value) || 0 })}\n              fullWidth\n            />\n            <TextField\n              label=\"Temperature (°C)\"\n              type=\"number\"\n              value={newDevice.temperature}\n              onChange={(e) => setNewDevice({ ...newDevice, temperature: parseFloat(e.target.value) || 0 })}\n              fullWidth\n            />\n          </Stack>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseAddDialog} variant=\"outlined\">\n            Cancel\n          </Button>\n          <Button onClick={handleAddDevice} variant=\"contained\">\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Container>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}