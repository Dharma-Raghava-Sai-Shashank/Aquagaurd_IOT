{"ast":null,"code":"var _jsxFileName = \"/Users/shashank/Downloads/Reddy/frontend/src/DeviceAnalytics.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, CircularProgress, Button, Slider } from '@mui/material';\nimport { Line, Bar, Pie } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, BarElement, ArcElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, ArcElement, Title, Tooltip, Legend);\nfunction DeviceAnalytics({\n  deviceId\n}) {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [chartData, setChartData] = useState({});\n  const [chartType, setChartType] = useState('line'); // 'line', 'bar', 'pie'\n  const [timeRange, setTimeRange] = useState([0, 24]); // Default range from 0 to 24\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(`http://localhost:5001/api/devices/${deviceId}`).then(res => res.json()).then(device => {\n      filterData(device);\n      setLoading(false);\n    }).catch(error => {\n      console.error(\"Error fetching device data:\", error);\n      setLoading(false);\n    });\n  }, [deviceId, timeRange]); // React to changes in deviceId and timeRange\n\n  const filterData = device => {\n    // Fallback if device.data is empty\n    if (!device.data || device.data.length === 0) {\n      setChartData({});\n      return;\n    }\n    const filteredData = device.data.filter(d => {\n      const hour = new Date(d.timestamp).getHours();\n      return hour >= timeRange[0] && hour <= timeRange[1];\n    });\n    if (filteredData.length === 0) {\n      setChartData({});\n      return; // If no data matches the filter, do not attempt to set up chart data\n    }\n    const labels = filteredData.map(d => new Date(d.timestamp).toLocaleTimeString());\n    const data = {\n      labels,\n      datasets: [{\n        label: 'Water Flow (L/s)',\n        data: filteredData.map(d => d.waterFlow),\n        borderColor: 'rgb(75, 192, 192)',\n        backgroundColor: 'rgba(75, 192, 192, 0.5)'\n      }, {\n        label: 'Pressure (psi)',\n        data: filteredData.map(d => d.pressure),\n        borderColor: 'rgb(255, 99, 132)',\n        backgroundColor: 'rgba(255, 99, 132, 0.5)'\n      }, {\n        label: 'Temperature (°C)',\n        data: filteredData.map(d => d.temperature),\n        borderColor: 'rgb(53, 162, 235)',\n        backgroundColor: 'rgba(53, 162, 235, 0.5)'\n      }]\n    };\n    setChartData(data);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 68\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 12\n    }, this);\n  }\n  if (Object.keys(chartData).length === 0) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      textAlign: \"center\",\n      children: \"No data available for selected time range.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: [\"Device Analytics: \", deviceId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: 300,\n        margin: '20px auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        gutterBottom: true,\n        children: \"Time Range (Hours):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Slider, {\n        value: timeRange,\n        onChange: (event, newValue) => setTimeRange(newValue),\n        valueLabelDisplay: \"auto\",\n        min: 0,\n        max: 24,\n        marks: timeRange.map(value => ({\n          value,\n          label: `${value}h`\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: () => setChartType('line'),\n      sx: {\n        mr: 1\n      },\n      children: \"Line Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: () => setChartType('bar'),\n      sx: {\n        mr: 1\n      },\n      children: \"Bar Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: () => setChartType('pie'),\n      children: \"Pie Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), chartType === 'line' && /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 32\n    }, this), chartType === 'bar' && /*#__PURE__*/_jsxDEV(Bar, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 31\n    }, this), chartType === 'pie' && /*#__PURE__*/_jsxDEV(Pie, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(DeviceAnalytics, \"64yCSJi52N3sLkr/WBxE6+jxf7Q=\");\n_c = DeviceAnalytics;\nexport default DeviceAnalytics;\nvar _c;\n$RefreshReg$(_c, \"DeviceAnalytics\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","CircularProgress","Button","Slider","Line","Bar","Pie","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","BarElement","ArcElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","DeviceAnalytics","deviceId","_s","loading","setLoading","chartData","setChartData","chartType","setChartType","timeRange","setTimeRange","fetch","then","res","json","device","filterData","catch","error","console","data","length","filteredData","filter","d","hour","Date","timestamp","getHours","labels","map","toLocaleTimeString","datasets","label","waterFlow","borderColor","backgroundColor","pressure","temperature","sx","display","justifyContent","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","variant","textAlign","gutterBottom","width","margin","value","onChange","event","newValue","valueLabelDisplay","min","max","marks","onClick","mr","_c","$RefreshReg$"],"sources":["/Users/shashank/Downloads/Reddy/frontend/src/DeviceAnalytics.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Typography,\n  CircularProgress,\n  Button,\n  Slider\n} from '@mui/material';\nimport { Line, Bar, Pie } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, BarElement, ArcElement, Title, Tooltip, Legend } from 'chart.js';\n\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, ArcElement, Title, Tooltip, Legend);\n\nfunction DeviceAnalytics({ deviceId }) {\n  const [loading, setLoading] = useState(true);\n  const [chartData, setChartData] = useState({});\n  const [chartType, setChartType] = useState('line'); // 'line', 'bar', 'pie'\n  const [timeRange, setTimeRange] = useState([0, 24]); // Default range from 0 to 24\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(`http://localhost:5001/api/devices/${deviceId}`)\n      .then(res => res.json())\n      .then(device => {\n        filterData(device);\n        setLoading(false);\n      })\n      .catch(error => {\n        console.error(\"Error fetching device data:\", error);\n        setLoading(false);\n      });\n  }, [deviceId, timeRange]); // React to changes in deviceId and timeRange\n\n  const filterData = (device) => {\n    // Fallback if device.data is empty\n    if (!device.data || device.data.length === 0) {\n      setChartData({});\n      return;\n    }\n\n    const filteredData = device.data.filter(d => {\n      const hour = new Date(d.timestamp).getHours();\n      return hour >= timeRange[0] && hour <= timeRange[1];\n    });\n\n    if (filteredData.length === 0) {\n      setChartData({});\n      return; // If no data matches the filter, do not attempt to set up chart data\n    }\n\n    const labels = filteredData.map(d => new Date(d.timestamp).toLocaleTimeString());\n    const data = {\n      labels,\n      datasets: [\n        {\n          label: 'Water Flow (L/s)',\n          data: filteredData.map(d => d.waterFlow),\n          borderColor: 'rgb(75, 192, 192)',\n          backgroundColor: 'rgba(75, 192, 192, 0.5)',\n        },\n        {\n          label: 'Pressure (psi)',\n          data: filteredData.map(d => d.pressure),\n          borderColor: 'rgb(255, 99, 132)',\n          backgroundColor: 'rgba(255, 99, 132, 0.5)',\n        },\n        {\n          label: 'Temperature (°C)',\n          data: filteredData.map(d => d.temperature),\n          borderColor: 'rgb(53, 162, 235)',\n          backgroundColor: 'rgba(53, 162, 235, 0.5)',\n        }\n      ]\n    };\n    setChartData(data);\n  };\n\n  if (loading) {\n    return <Box sx={{ display: 'flex', justifyContent: 'center' }}><CircularProgress /></Box>;\n  }\n\n  if (Object.keys(chartData).length === 0) {\n    return <Typography variant=\"subtitle1\" textAlign=\"center\">No data available for selected time range.</Typography>;\n  }\n\n  return (\n    <Box>\n      <Typography variant=\"h6\" gutterBottom>\n        Device Analytics: {deviceId}\n      </Typography>\n\n      {/* Time Range Filter */}\n      <Box sx={{ width: 300, margin: '20px auto' }}>\n        <Typography gutterBottom>Time Range (Hours):</Typography>\n        <Slider\n          value={timeRange}\n          onChange={(event, newValue) => setTimeRange(newValue)}\n          valueLabelDisplay=\"auto\"\n          min={0}\n          max={24}\n          marks={timeRange.map(value => ({ value, label: `${value}h` }))}\n        />\n      </Box>\n\n      {/* Buttons to switch charts */}\n      <Button variant=\"contained\" onClick={() => setChartType('line')} sx={{ mr: 1 }}>Line Chart</Button>\n      <Button variant=\"contained\" onClick={() => setChartType('bar')} sx={{ mr: 1 }}>Bar Chart</Button>\n      <Button variant=\"contained\" onClick={() => setChartType('pie')}>Pie Chart</Button>\n\n      {/* Conditionally render charts */}\n      {chartType === 'line' && <Line data={chartData} />}\n      {chartType === 'bar' && <Bar data={chartData} />}\n      {chartType === 'pie' && <Pie data={chartData} />}\n    </Box>\n  );\n}\n\nexport default DeviceAnalytics;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SACEC,GAAG,EACHC,UAAU,EACVC,gBAAgB,EAChBC,MAAM,EACNC,MAAM,QACD,eAAe;AACtB,SAASC,IAAI,EAAEC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AAChD,SAASC,KAAK,IAAIC,OAAO,EAAEC,aAAa,EAAEC,WAAW,EAAEC,YAAY,EAAEC,WAAW,EAAEC,UAAU,EAAEC,UAAU,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnJX,OAAO,CAACY,QAAQ,CAACX,aAAa,EAAEC,WAAW,EAAEC,YAAY,EAAEC,WAAW,EAAEC,UAAU,EAAEC,UAAU,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAEvH,SAASI,eAAeA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACrC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAAC6B,SAAS,EAAEC,YAAY,CAAC,GAAG9B,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9C,MAAM,CAAC+B,SAAS,EAAEC,YAAY,CAAC,GAAGhC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;EACpD,MAAM,CAACiC,SAAS,EAAEC,YAAY,CAAC,GAAGlC,QAAQ,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;;EAErDC,SAAS,CAAC,MAAM;IACd2B,UAAU,CAAC,IAAI,CAAC;IAChBO,KAAK,CAAC,qCAAqCV,QAAQ,EAAE,CAAC,CACnDW,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,MAAM,IAAI;MACdC,UAAU,CAACD,MAAM,CAAC;MAClBX,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACDa,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnDd,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,CAACH,QAAQ,EAAEQ,SAAS,CAAC,CAAC,CAAC,CAAC;;EAE3B,MAAMO,UAAU,GAAID,MAAM,IAAK;IAC7B;IACA,IAAI,CAACA,MAAM,CAACK,IAAI,IAAIL,MAAM,CAACK,IAAI,CAACC,MAAM,KAAK,CAAC,EAAE;MAC5Cf,YAAY,CAAC,CAAC,CAAC,CAAC;MAChB;IACF;IAEA,MAAMgB,YAAY,GAAGP,MAAM,CAACK,IAAI,CAACG,MAAM,CAACC,CAAC,IAAI;MAC3C,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,CAAC,CAACG,SAAS,CAAC,CAACC,QAAQ,CAAC,CAAC;MAC7C,OAAOH,IAAI,IAAIhB,SAAS,CAAC,CAAC,CAAC,IAAIgB,IAAI,IAAIhB,SAAS,CAAC,CAAC,CAAC;IACrD,CAAC,CAAC;IAEF,IAAIa,YAAY,CAACD,MAAM,KAAK,CAAC,EAAE;MAC7Bf,YAAY,CAAC,CAAC,CAAC,CAAC;MAChB,OAAO,CAAC;IACV;IAEA,MAAMuB,MAAM,GAAGP,YAAY,CAACQ,GAAG,CAACN,CAAC,IAAI,IAAIE,IAAI,CAACF,CAAC,CAACG,SAAS,CAAC,CAACI,kBAAkB,CAAC,CAAC,CAAC;IAChF,MAAMX,IAAI,GAAG;MACXS,MAAM;MACNG,QAAQ,EAAE,CACR;QACEC,KAAK,EAAE,kBAAkB;QACzBb,IAAI,EAAEE,YAAY,CAACQ,GAAG,CAACN,CAAC,IAAIA,CAAC,CAACU,SAAS,CAAC;QACxCC,WAAW,EAAE,mBAAmB;QAChCC,eAAe,EAAE;MACnB,CAAC,EACD;QACEH,KAAK,EAAE,gBAAgB;QACvBb,IAAI,EAAEE,YAAY,CAACQ,GAAG,CAACN,CAAC,IAAIA,CAAC,CAACa,QAAQ,CAAC;QACvCF,WAAW,EAAE,mBAAmB;QAChCC,eAAe,EAAE;MACnB,CAAC,EACD;QACEH,KAAK,EAAE,kBAAkB;QACzBb,IAAI,EAAEE,YAAY,CAACQ,GAAG,CAACN,CAAC,IAAIA,CAAC,CAACc,WAAW,CAAC;QAC1CH,WAAW,EAAE,mBAAmB;QAChCC,eAAe,EAAE;MACnB,CAAC;IAEL,CAAC;IACD9B,YAAY,CAACc,IAAI,CAAC;EACpB,CAAC;EAED,IAAIjB,OAAO,EAAE;IACX,oBAAOL,OAAA,CAACpB,GAAG;MAAC6D,EAAE,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE;MAAS,CAAE;MAAAC,QAAA,eAAC5C,OAAA,CAAClB,gBAAgB;QAAA+D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC3F;EAEA,IAAIC,MAAM,CAACC,IAAI,CAAC3C,SAAS,CAAC,CAACgB,MAAM,KAAK,CAAC,EAAE;IACvC,oBAAOvB,OAAA,CAACnB,UAAU;MAACsE,OAAO,EAAC,WAAW;MAACC,SAAS,EAAC,QAAQ;MAAAR,QAAA,EAAC;IAA0C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC;EACnH;EAEA,oBACEhD,OAAA,CAACpB,GAAG;IAAAgE,QAAA,gBACF5C,OAAA,CAACnB,UAAU;MAACsE,OAAO,EAAC,IAAI;MAACE,YAAY;MAAAT,QAAA,GAAC,oBAClB,EAACzC,QAAQ;IAAA;MAAA0C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC,eAGbhD,OAAA,CAACpB,GAAG;MAAC6D,EAAE,EAAE;QAAEa,KAAK,EAAE,GAAG;QAAEC,MAAM,EAAE;MAAY,CAAE;MAAAX,QAAA,gBAC3C5C,OAAA,CAACnB,UAAU;QAACwE,YAAY;QAAAT,QAAA,EAAC;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACzDhD,OAAA,CAAChB,MAAM;QACLwE,KAAK,EAAE7C,SAAU;QACjB8C,QAAQ,EAAEA,CAACC,KAAK,EAAEC,QAAQ,KAAK/C,YAAY,CAAC+C,QAAQ,CAAE;QACtDC,iBAAiB,EAAC,MAAM;QACxBC,GAAG,EAAE,CAAE;QACPC,GAAG,EAAE,EAAG;QACRC,KAAK,EAAEpD,SAAS,CAACqB,GAAG,CAACwB,KAAK,KAAK;UAAEA,KAAK;UAAErB,KAAK,EAAE,GAAGqB,KAAK;QAAI,CAAC,CAAC;MAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAGNhD,OAAA,CAACjB,MAAM;MAACoE,OAAO,EAAC,WAAW;MAACa,OAAO,EAAEA,CAAA,KAAMtD,YAAY,CAAC,MAAM,CAAE;MAAC+B,EAAE,EAAE;QAAEwB,EAAE,EAAE;MAAE,CAAE;MAAArB,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACnGhD,OAAA,CAACjB,MAAM;MAACoE,OAAO,EAAC,WAAW;MAACa,OAAO,EAAEA,CAAA,KAAMtD,YAAY,CAAC,KAAK,CAAE;MAAC+B,EAAE,EAAE;QAAEwB,EAAE,EAAE;MAAE,CAAE;MAAArB,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACjGhD,OAAA,CAACjB,MAAM;MAACoE,OAAO,EAAC,WAAW;MAACa,OAAO,EAAEA,CAAA,KAAMtD,YAAY,CAAC,KAAK,CAAE;MAAAkC,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAGjFvC,SAAS,KAAK,MAAM,iBAAIT,OAAA,CAACf,IAAI;MAACqC,IAAI,EAAEf;IAAU;MAAAsC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACjDvC,SAAS,KAAK,KAAK,iBAAIT,OAAA,CAACd,GAAG;MAACoC,IAAI,EAAEf;IAAU;MAAAsC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC/CvC,SAAS,KAAK,KAAK,iBAAIT,OAAA,CAACb,GAAG;MAACmC,IAAI,EAAEf;IAAU;MAAAsC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEV;AAAC5C,EAAA,CAtGQF,eAAe;AAAAgE,EAAA,GAAfhE,eAAe;AAwGxB,eAAeA,eAAe;AAAC,IAAAgE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}