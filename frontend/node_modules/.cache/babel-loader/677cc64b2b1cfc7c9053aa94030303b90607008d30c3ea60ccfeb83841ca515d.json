{"ast":null,"code":"var _jsxFileName = \"/Users/shashank/Downloads/Reddy/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Container, Typography, Button, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@mui/material';\nimport AddDeviceDialog from './AddDeviceDialog';\nimport EditDeviceDialog from './EditDeviceDialog';\nimport DeviceChart from './DeviceChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [devices, setDevices] = useState([]);\n  const [selectedDevice, setSelectedDevice] = useState(null);\n  useEffect(() => {\n    fetch('http://localhost:5001/api/devices').then(res => res.json()).then(setDevices).catch(err => console.error('Error fetching devices:', err));\n  }, []);\n  const handleAddDevice = deviceData => {\n    fetch('http://localhost:5001/api/devices', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(deviceData)\n    }).then(res => res.json()).then(data => {\n      setDevices([...devices, data]);\n    }).catch(error => console.error('Error adding new device:', error));\n  };\n  const handleUpdateDevice = updatedDevice => {\n    fetch(`http://localhost:5001/api/devices/${updatedDevice.Did}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updatedDevice)\n    }).then(res => res.json()).then(() => {\n      const updatedDevices = devices.map(device => device.Did === updatedDevice.Did ? updatedDevice : device);\n      setDevices(updatedDevices);\n    }).catch(error => console.error('Error updating device:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    sx: {\n      marginTop: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Device Management System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      sx: {\n        mb: 2\n      },\n      onClick: () => setSelectedDevice({}),\n      children: \"Add Device\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Device Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Water Flow (L/s)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Pressure (psi)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Temperature (\\xB0C)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: devices.map(device => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: device.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: device.waterFlow\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: device.pressure\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: device.temperature\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                color: \"primary\",\n                onClick: () => setSelectedDevice(device),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this)]\n          }, device.Did, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeviceChart, {\n      devices: devices\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddDeviceDialog, {\n      open: !!selectedDevice && !selectedDevice.Did,\n      onClose: () => setSelectedDevice(null),\n      onAdd: handleAddDevice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), selectedDevice && selectedDevice.Did && /*#__PURE__*/_jsxDEV(EditDeviceDialog, {\n      device: selectedDevice,\n      onClose: () => setSelectedDevice(null),\n      onUpdate: handleUpdateDevice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 48\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XdiPNG+vW/UmxH1wLKbDEutK1Xg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Container","Typography","Button","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","AddDeviceDialog","EditDeviceDialog","DeviceChart","jsxDEV","_jsxDEV","App","_s","devices","setDevices","selectedDevice","setSelectedDevice","fetch","then","res","json","catch","err","console","error","handleAddDevice","deviceData","method","headers","body","JSON","stringify","data","handleUpdateDevice","updatedDevice","Did","updatedDevices","map","device","maxWidth","sx","marginTop","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","mb","onClick","component","name","waterFlow","pressure","temperature","color","open","onClose","onAdd","onUpdate","_c","$RefreshReg$"],"sources":["/Users/shashank/Downloads/Reddy/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  Container, Typography, Button, Table, TableBody, TableCell,\n  TableContainer, TableHead, TableRow, Paper\n} from '@mui/material';\nimport AddDeviceDialog from './AddDeviceDialog';\nimport EditDeviceDialog from './EditDeviceDialog';\nimport DeviceChart from './DeviceChart';\n\nfunction App() {\n  const [devices, setDevices] = useState([]);\n  const [selectedDevice, setSelectedDevice] = useState(null);\n\n  useEffect(() => {\n    fetch('http://localhost:5001/api/devices')\n      .then(res => res.json())\n      .then(setDevices)\n      .catch(err => console.error('Error fetching devices:', err));\n  }, []);\n\n  const handleAddDevice = (deviceData) => {\n    fetch('http://localhost:5001/api/devices', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(deviceData),\n    })\n    .then(res => res.json())\n    .then(data => {\n      setDevices([...devices, data]);\n    })\n    .catch(error => console.error('Error adding new device:', error));\n  };\n\n  const handleUpdateDevice = (updatedDevice) => {\n    fetch(`http://localhost:5001/api/devices/${updatedDevice.Did}`, {\n      method: 'PUT',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(updatedDevice),\n    })\n    .then(res => res.json())\n    .then(() => {\n      const updatedDevices = devices.map(device => device.Did === updatedDevice.Did ? updatedDevice : device);\n      setDevices(updatedDevices);\n    })\n    .catch(error => console.error('Error updating device:', error));\n  };\n\n  return (\n    <Container maxWidth=\"md\" sx={{ marginTop: 4 }}>\n      <Typography variant=\"h4\" gutterBottom>Device Management System</Typography>\n      <Button variant=\"contained\" sx={{ mb: 2 }} onClick={() => setSelectedDevice({})}>Add Device</Button>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Device Name</TableCell>\n              <TableCell>Water Flow (L/s)</TableCell>\n              <TableCell>Pressure (psi)</TableCell>\n              <TableCell>Temperature (°C)</TableCell>\n              <TableCell>Edit</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {devices.map((device) => (\n              <TableRow key={device.Did}>\n                <TableCell>{device.name}</TableCell>\n                <TableCell>{device.waterFlow}</TableCell>\n                <TableCell>{device.pressure}</TableCell>\n                <TableCell>{device.temperature}</TableCell>\n                <TableCell>\n                  <Button color=\"primary\" onClick={() => setSelectedDevice(device)}>Edit</Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <DeviceChart devices={devices} />\n      <AddDeviceDialog open={!!selectedDevice && !selectedDevice.Did} onClose={() => setSelectedDevice(null)} onAdd={handleAddDevice} />\n      {selectedDevice && selectedDevice.Did && <EditDeviceDialog device={selectedDevice} onClose={() => setSelectedDevice(null)} onUpdate={handleUpdateDevice} />}\n    </Container>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}