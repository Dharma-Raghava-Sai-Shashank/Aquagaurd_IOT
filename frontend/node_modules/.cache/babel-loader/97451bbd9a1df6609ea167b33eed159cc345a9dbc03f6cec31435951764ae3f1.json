{"ast":null,"code":"var _jsxFileName = \"/Users/shashank/Downloads/Reddy/frontend/src/components/AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Box, Button, Container, Typography, Dialog, DialogTitle, DialogContent, DialogActions, TextField, MenuItem, Select, InputLabel, FormControl, Tabs, Tab, AppBar } from \"@mui/material\";\nimport API from \"../api\";\nimport TrackActivities from \"./TrackActivities\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const [tabIndex, setTabIndex] = useState(0);\n  const [courses, setCourses] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [selectedCourse, setSelectedCourse] = useState(\"\");\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [openCourseDialog, setOpenCourseDialog] = useState(false);\n  const [openFileDialog, setOpenFileDialog] = useState(false); // For adding files to a course\n  const [courseData, setCourseData] = useState({\n    title: \"\",\n    description: \"\",\n    pdfFiles: []\n  });\n  const [files, setFiles] = useState([]); // For file uploads to existing courses\n\n  // Fetch data on load\n  useEffect(() => {\n    fetchCourses();\n    fetchUsers();\n  }, []);\n\n  // Fetch all courses\n  const fetchCourses = async () => {\n    try {\n      const {\n        data\n      } = await API.get(\"/courses\");\n      setCourses(data);\n    } catch (error) {\n      alert(\"Error fetching courses\");\n    }\n  };\n\n  // Fetch all users\n  const fetchUsers = async () => {\n    try {\n      const {\n        data\n      } = await API.get(\"/admin/users\");\n      setUsers(data);\n    } catch (error) {\n      alert(\"Error fetching users\");\n    }\n  };\n\n  // Upload new course with multiple files\n  const handleCourseUpload = async () => {\n    try {\n      if (!courseData.pdfFiles || courseData.pdfFiles.length === 0) {\n        alert(\"Please select PDF files to upload.\");\n        return;\n      }\n      const formData = new FormData();\n      courseData.pdfFiles.forEach(file => formData.append(\"pdfFiles\", file));\n      const uploadResponse = await API.post(\"/courses/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      const filePaths = uploadResponse.data.files;\n      const coursePayload = {\n        title: courseData.title,\n        description: courseData.description,\n        pdfFiles: filePaths\n      };\n      await API.post(\"/courses\", coursePayload);\n      alert(\"Course uploaded successfully!\");\n      fetchCourses();\n      setOpenCourseDialog(false);\n    } catch (error) {\n      console.error(\"Error during upload or course creation:\", error);\n      alert(\"Error uploading course or files. Please try again.\");\n    }\n  };\n\n  // Add files to an existing course\n  const handleFileUpload = async () => {\n    try {\n      if (!selectedCourse || files.length === 0) {\n        alert(\"Please select a course and files to upload.\");\n        return;\n      }\n      const formData = new FormData();\n      files.forEach(file => formData.append(\"pdfFiles\", file));\n      await API.post(`/courses/${selectedCourse}/add-files`, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      alert(\"Files added successfully!\");\n      fetchCourses();\n      setFiles([]);\n      setOpenFileDialog(false);\n    } catch (error) {\n      console.error(\"Error adding files to the course:\", error);\n      alert(\"Error adding files. Please try again.\");\n    }\n  };\n\n  // Assign course to multiple users\n  const handleAssign = async () => {\n    try {\n      if (!selectedCourse || selectedUsers.length === 0) {\n        alert(\"Please select a course and at least one user to assign.\");\n        return;\n      }\n      await API.post(`/courses/${selectedCourse}/add-members`, {\n        userIds: selectedUsers\n      });\n      alert(\"Team members assigned successfully!\");\n    } catch (error) {\n      console.error(\"Error assigning team members:\", error);\n      alert(\"Error assigning team members. Please try again.\");\n    }\n  };\n\n  // Handle tab change\n  const handleTabChange = (event, newValue) => {\n    setTabIndex(newValue);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    sx: {\n      mt: 8\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      color: \"default\",\n      sx: {\n        mt: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        value: tabIndex,\n        onChange: handleTabChange,\n        indicatorColor: \"primary\",\n        textColor: \"primary\",\n        variant: \"fullWidth\",\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Manage Courses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Track Activities\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), tabIndex === 0 && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Upload a New Course\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => setOpenCourseDialog(true),\n        sx: {\n          mb: 2\n        },\n        children: \"Upload Course\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: openCourseDialog,\n        onClose: () => setOpenCourseDialog(false),\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Upload Course\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Title\",\n            fullWidth: true,\n            margin: \"normal\",\n            value: courseData.title,\n            onChange: e => setCourseData({\n              ...courseData,\n              title: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Description\",\n            fullWidth: true,\n            margin: \"normal\",\n            value: courseData.description,\n            onChange: e => setCourseData({\n              ...courseData,\n              description: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            multiple: true,\n            accept: \".pdf\",\n            onChange: e => setCourseData({\n              ...courseData,\n              pdfFiles: Array.from(e.target.files)\n            }),\n            style: {\n              marginTop: \"16px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setOpenCourseDialog(false),\n            color: \"secondary\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleCourseUpload,\n            color: \"primary\",\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Add Files to Existing Course\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => setOpenFileDialog(true),\n        sx: {\n          mb: 2\n        },\n        children: \"Add Files to Course\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: openFileDialog,\n        onClose: () => setOpenFileDialog(false),\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Add Files to Course\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            margin: \"normal\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Course\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: selectedCourse,\n              onChange: e => setSelectedCourse(e.target.value),\n              children: courses.map(course => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: course._id,\n                children: course.title\n              }, course._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            multiple: true,\n            accept: \".pdf\",\n            onChange: e => setFiles(Array.from(e.target.files)),\n            style: {\n              marginTop: \"16px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setOpenFileDialog(false),\n            color: \"secondary\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleFileUpload,\n            color: \"primary\",\n            children: \"Add Files\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Assign Course to Members\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        margin: \"normal\",\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: \"Course\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: selectedCourse,\n          onChange: e => setSelectedCourse(e.target.value),\n          children: courses.map(course => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: course._id,\n            children: course.title\n          }, course._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        margin: \"normal\",\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: \"Members\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          multiple: true,\n          value: selectedUsers,\n          onChange: e => setSelectedUsers(e.target.value),\n          renderValue: selected => selected.map(id => {\n            var _users$find;\n            return ((_users$find = users.find(user => user._id === id)) === null || _users$find === void 0 ? void 0 : _users$find.name) || id;\n          }).join(\", \"),\n          children: users.map(user => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: user._id,\n            children: user.name\n          }, user._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleAssign,\n        children: \"Assign Members\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }, this), tabIndex === 1 && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(TrackActivities, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"TMbNUd3FJJ7bcH+G6/7EYSQNDSU=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","Box","Button","Container","Typography","Dialog","DialogTitle","DialogContent","DialogActions","TextField","MenuItem","Select","InputLabel","FormControl","Tabs","Tab","AppBar","API","TrackActivities","jsxDEV","_jsxDEV","AdminDashboard","_s","tabIndex","setTabIndex","courses","setCourses","users","setUsers","selectedCourse","setSelectedCourse","selectedUsers","setSelectedUsers","openCourseDialog","setOpenCourseDialog","openFileDialog","setOpenFileDialog","courseData","setCourseData","title","description","pdfFiles","files","setFiles","fetchCourses","fetchUsers","data","get","error","alert","handleCourseUpload","length","formData","FormData","forEach","file","append","uploadResponse","post","headers","filePaths","coursePayload","console","handleFileUpload","handleAssign","userIds","handleTabChange","event","newValue","maxWidth","sx","mt","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","position","color","value","onChange","indicatorColor","textColor","label","onClick","mb","open","onClose","fullWidth","margin","e","target","type","multiple","accept","Array","from","style","marginTop","map","course","_id","renderValue","selected","id","_users$find","find","user","name","join","_c","$RefreshReg$"],"sources":["/Users/shashank/Downloads/Reddy/frontend/src/components/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Typography,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  MenuItem,\r\n  Select,\r\n  InputLabel,\r\n  FormControl,\r\n  Tabs,\r\n  Tab,\r\n  AppBar,\r\n} from \"@mui/material\";\r\nimport API from \"../api\";\r\nimport TrackActivities from \"./TrackActivities\";\r\n\r\nconst AdminDashboard = () => {\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n  const [courses, setCourses] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [selectedCourse, setSelectedCourse] = useState(\"\");\r\n  const [selectedUsers, setSelectedUsers] = useState([]);\r\n  const [openCourseDialog, setOpenCourseDialog] = useState(false);\r\n  const [openFileDialog, setOpenFileDialog] = useState(false); // For adding files to a course\r\n  const [courseData, setCourseData] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    pdfFiles: [],\r\n  });\r\n  const [files, setFiles] = useState([]); // For file uploads to existing courses\r\n\r\n  // Fetch data on load\r\n  useEffect(() => {\r\n    fetchCourses();\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  // Fetch all courses\r\n  const fetchCourses = async () => {\r\n    try {\r\n      const { data } = await API.get(\"/courses\");\r\n      setCourses(data);\r\n    } catch (error) {\r\n      alert(\"Error fetching courses\");\r\n    }\r\n  };\r\n\r\n  // Fetch all users\r\n  const fetchUsers = async () => {\r\n    try {\r\n      const { data } = await API.get(\"/admin/users\");\r\n      setUsers(data);\r\n    } catch (error) {\r\n      alert(\"Error fetching users\");\r\n    }\r\n  };\r\n\r\n  // Upload new course with multiple files\r\n  const handleCourseUpload = async () => {\r\n    try {\r\n      if (!courseData.pdfFiles || courseData.pdfFiles.length === 0) {\r\n        alert(\"Please select PDF files to upload.\");\r\n        return;\r\n      }\r\n\r\n      const formData = new FormData();\r\n      courseData.pdfFiles.forEach((file) => formData.append(\"pdfFiles\", file));\r\n\r\n      const uploadResponse = await API.post(\"/courses/upload\", formData, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      });\r\n\r\n      const filePaths = uploadResponse.data.files;\r\n\r\n      const coursePayload = {\r\n        title: courseData.title,\r\n        description: courseData.description,\r\n        pdfFiles: filePaths,\r\n      };\r\n\r\n      await API.post(\"/courses\", coursePayload);\r\n\r\n      alert(\"Course uploaded successfully!\");\r\n      fetchCourses();\r\n      setOpenCourseDialog(false);\r\n    } catch (error) {\r\n      console.error(\"Error during upload or course creation:\", error);\r\n      alert(\"Error uploading course or files. Please try again.\");\r\n    }\r\n  };\r\n\r\n  // Add files to an existing course\r\n  const handleFileUpload = async () => {\r\n    try {\r\n      if (!selectedCourse || files.length === 0) {\r\n        alert(\"Please select a course and files to upload.\");\r\n        return;\r\n      }\r\n\r\n      const formData = new FormData();\r\n      files.forEach((file) => formData.append(\"pdfFiles\", file));\r\n\r\n      await API.post(`/courses/${selectedCourse}/add-files`, formData, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      });\r\n\r\n      alert(\"Files added successfully!\");\r\n      fetchCourses();\r\n      setFiles([]);\r\n      setOpenFileDialog(false);\r\n    } catch (error) {\r\n      console.error(\"Error adding files to the course:\", error);\r\n      alert(\"Error adding files. Please try again.\");\r\n    }\r\n  };\r\n\r\n  // Assign course to multiple users\r\n  const handleAssign = async () => {\r\n    try {\r\n      if (!selectedCourse || selectedUsers.length === 0) {\r\n        alert(\"Please select a course and at least one user to assign.\");\r\n        return;\r\n      }\r\n\r\n      await API.post(`/courses/${selectedCourse}/add-members`, { userIds: selectedUsers });\r\n\r\n      alert(\"Team members assigned successfully!\");\r\n    } catch (error) {\r\n      console.error(\"Error assigning team members:\", error);\r\n      alert(\"Error assigning team members. Please try again.\");\r\n    }\r\n  };\r\n\r\n  // Handle tab change\r\n  const handleTabChange = (event, newValue) => {\r\n    setTabIndex(newValue);\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"md\" sx={{ mt: 8 }}>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Admin Dashboard\r\n      </Typography>\r\n\r\n      {/* Tab Navigation */}\r\n      <AppBar position=\"static\" color=\"default\" sx={{ mt: 2 }}>\r\n        <Tabs\r\n          value={tabIndex}\r\n          onChange={handleTabChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"fullWidth\"\r\n        >\r\n          <Tab label=\"Manage Courses\" />\r\n          <Tab label=\"Track Activities\" />\r\n        </Tabs>\r\n      </AppBar>\r\n\r\n      {/* Manage Courses Tab */}\r\n      {tabIndex === 0 && (\r\n        <Box sx={{ mt: 4 }}>\r\n          {/* Upload New Course */}\r\n          <Typography variant=\"h6\">Upload a New Course</Typography>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => setOpenCourseDialog(true)}\r\n            sx={{ mb: 2 }}\r\n          >\r\n            Upload Course\r\n          </Button>\r\n          <Dialog open={openCourseDialog} onClose={() => setOpenCourseDialog(false)}>\r\n            <DialogTitle>Upload Course</DialogTitle>\r\n            <DialogContent>\r\n              <TextField\r\n                label=\"Title\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                value={courseData.title}\r\n                onChange={(e) => setCourseData({ ...courseData, title: e.target.value })}\r\n              />\r\n              <TextField\r\n                label=\"Description\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                value={courseData.description}\r\n                onChange={(e) => setCourseData({ ...courseData, description: e.target.value })}\r\n              />\r\n              <input\r\n                type=\"file\"\r\n                multiple\r\n                accept=\".pdf\"\r\n                onChange={(e) => setCourseData({ ...courseData, pdfFiles: Array.from(e.target.files) })}\r\n                style={{ marginTop: \"16px\" }}\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={() => setOpenCourseDialog(false)} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button onClick={handleCourseUpload} color=\"primary\">\r\n                Upload\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n\r\n          {/* Add Files to Existing Course */}\r\n          <Typography variant=\"h6\">Add Files to Existing Course</Typography>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => setOpenFileDialog(true)}\r\n            sx={{ mb: 2 }}\r\n          >\r\n            Add Files to Course\r\n          </Button>\r\n          <Dialog open={openFileDialog} onClose={() => setOpenFileDialog(false)}>\r\n            <DialogTitle>Add Files to Course</DialogTitle>\r\n            <DialogContent>\r\n              <FormControl fullWidth margin=\"normal\">\r\n                <InputLabel>Course</InputLabel>\r\n                <Select\r\n                  value={selectedCourse}\r\n                  onChange={(e) => setSelectedCourse(e.target.value)}\r\n                >\r\n                  {courses.map((course) => (\r\n                    <MenuItem key={course._id} value={course._id}>\r\n                      {course.title}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n              <input\r\n                type=\"file\"\r\n                multiple\r\n                accept=\".pdf\"\r\n                onChange={(e) => setFiles(Array.from(e.target.files))}\r\n                style={{ marginTop: \"16px\" }}\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={() => setOpenFileDialog(false)} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button onClick={handleFileUpload} color=\"primary\">\r\n                Add Files\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n\r\n          {/* Assign Course to Members */}\r\n          <Typography variant=\"h6\">Assign Course to Members</Typography>\r\n          <FormControl fullWidth margin=\"normal\">\r\n            <InputLabel>Course</InputLabel>\r\n            <Select value={selectedCourse} onChange={(e) => setSelectedCourse(e.target.value)}>\r\n              {courses.map((course) => (\r\n                <MenuItem key={course._id} value={course._id}>\r\n                  {course.title}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl fullWidth margin=\"normal\">\r\n            <InputLabel>Members</InputLabel>\r\n            <Select\r\n              multiple\r\n              value={selectedUsers}\r\n              onChange={(e) => setSelectedUsers(e.target.value)}\r\n              renderValue={(selected) =>\r\n                selected\r\n                  .map((id) => users.find((user) => user._id === id)?.name || id)\r\n                  .join(\", \")\r\n              }\r\n            >\r\n              {users.map((user) => (\r\n                <MenuItem key={user._id} value={user._id}>\r\n                  {user.name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={handleAssign}>\r\n            Assign Members\r\n          </Button>\r\n        </Box>\r\n      )}\r\n\r\n      {/* Track Activities Tab */}\r\n      {tabIndex === 1 && (\r\n        <Box sx={{ mt: 4 }}>\r\n          <TrackActivities />\r\n        </Box>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}