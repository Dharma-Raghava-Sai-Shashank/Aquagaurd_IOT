{"ast":null,"code":"var _jsxFileName = \"/Users/shashank/Downloads/Reddy/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Container, Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Dialog, DialogTitle, DialogContent, DialogActions, Button, Slider, Box, TextField, Stack } from '@mui/material';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Devices fetched from the DB on mount\n  const [devices, setDevices] = useState([]);\n\n  // Dialog to edit sensor data\n  const [openDialog, setOpenDialog] = useState(false);\n  const [selectedDeviceIndex, setSelectedDeviceIndex] = useState(null);\n\n  // Dialog to add a new device\n  const [openAddDialog, setOpenAddDialog] = useState(false);\n\n  // The new device being typed in the form\n  const [newDevice, setNewDevice] = useState({\n    Did: '',\n    location: '',\n    waterFlow: 0,\n    pressure: 0,\n    temperature: 0\n  });\n\n  /**\n   * 1) Fetch from DB on first render\n   */\n  useEffect(() => {\n    fetch('http://localhost:5001/api/devices').then(res => res.json()).then(data => setDevices(data)).catch(err => console.error('Error fetching devices:', err));\n  }, []);\n\n  /**\n   * 2) Random update effect (every second)\n   *    Remove or modify if not needed.\n   */\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setDevices(prevDevices => prevDevices.map(device => ({\n        ...device,\n        waterFlow: parseFloat((device.waterFlow + (Math.random() * 2 - 1)).toFixed(2)),\n        pressure: parseFloat((device.pressure + (Math.random() * 2 - 1)).toFixed(2)),\n        temperature: parseFloat((device.temperature + (Math.random() * 2 - 1)).toFixed(2))\n      })));\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // --------------------------\n  // Sensor-editing dialog\n  // --------------------------\n  const handleRowClick = index => {\n    setSelectedDeviceIndex(index);\n    setOpenDialog(true);\n  };\n  const handleDialogClose = () => {\n    setOpenDialog(false);\n  };\n\n  // Slider changes for the selected device\n  const handleSliderChange = (field, newValue) => {\n    setDevices(prevDevices => {\n      const updated = [...prevDevices];\n      updated[selectedDeviceIndex] = {\n        ...updated[selectedDeviceIndex],\n        [field]: newValue\n      };\n      return updated;\n    });\n  };\n  const selectedDevice = selectedDeviceIndex !== null ? devices[selectedDeviceIndex] : null;\n\n  // --------------------------\n  // \"Add Device\" dialog\n  // --------------------------\n  const handleOpenAddDialog = () => {\n    setNewDevice({\n      Did: '',\n      location: '',\n      waterFlow: 0,\n      pressure: 0,\n      temperature: 0\n    });\n    setOpenAddDialog(true);\n  };\n  const handleCloseAddDialog = () => {\n    setOpenAddDialog(false);\n  };\n\n  /**\n   * Called whenever any field in newDevice changes.\n   * 1) Update local `newDevice`.\n   * 2) Immediately POST to the server (creating or re-creating).\n   *    - In reality, you might want to do a \"PUT / upsert\" or add a debounce.\n   */\n  const handleNewDeviceFieldChange = (field, value) => {\n    setNewDevice(prev => {\n      const updated = {\n        ...prev,\n        [field]: value\n      };\n\n      // We only attempt to POST if Did and location are not empty\n      // (to avoid sending incomplete data for every single keystroke).\n      // You can remove or adjust this condition if desired.\n      if (updated.Did && updated.location) {\n        fetch('http://localhost:5001/api/devices', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(updated)\n        }).then(res => res.json()).then(data => {\n          console.log('Dynamic DB update response:', data);\n        }).catch(err => console.error('Error dynamically creating device:', err));\n      }\n      return updated;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    sx: {\n      marginTop: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Water Management System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      sx: {\n        mb: 2\n      },\n      onClick: handleOpenAddDialog,\n      children: \"Add Device\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Device ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Water Flow (L/s)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Pressure (psi)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Temperature (\\xB0C)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: devices.map((device, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n            hover: true,\n            style: {\n              cursor: 'pointer'\n            },\n            onClick: () => handleRowClick(index),\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: device.Did\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: device.location\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: device.waterFlow\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: device.pressure\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: device.temperature\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this)]\n          }, device.Did, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDialog,\n      onClose: handleDialogClose,\n      fullWidth: true,\n      maxWidth: \"sm\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Adjust Sensor Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        dividers: true,\n        children: selectedDevice && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              children: \"Water Flow (L/s)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Slider, {\n              value: selectedDevice.waterFlow,\n              min: 0,\n              max: 500,\n              step: 1,\n              onChange: (e, val) => handleSliderChange('waterFlow', val)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: [\"Current: \", selectedDevice.waterFlow.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 4\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              children: \"Pressure (psi)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Slider, {\n              value: selectedDevice.pressure,\n              min: 0,\n              max: 150,\n              step: 1,\n              onChange: (e, val) => handleSliderChange('pressure', val)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: [\"Current: \", selectedDevice.pressure.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 4\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              children: \"Temperature (\\xB0C)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Slider, {\n              value: selectedDevice.temperature,\n              min: 0,\n              max: 100,\n              step: 1,\n              onChange: (e, val) => handleSliderChange('temperature', val)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: [\"Current: \", selectedDevice.temperature.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleDialogClose,\n          variant: \"contained\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openAddDialog,\n      onClose: handleCloseAddDialog,\n      fullWidth: true,\n      maxWidth: \"sm\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Add New Device\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        dividers: true,\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 2,\n          sx: {\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Device ID\",\n            value: newDevice.Did,\n            onChange: e => handleNewDeviceFieldChange('Did', e.target.value),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Location\",\n            value: newDevice.location,\n            onChange: e => handleNewDeviceFieldChange('location', e.target.value),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Water Flow (L/s)\",\n            type: \"number\",\n            value: newDevice.waterFlow,\n            onChange: e => handleNewDeviceFieldChange('waterFlow', parseFloat(e.target.value) || 0),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Pressure (psi)\",\n            type: \"number\",\n            value: newDevice.pressure,\n            onChange: e => handleNewDeviceFieldChange('pressure', parseFloat(e.target.value) || 0),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Temperature (\\xB0C)\",\n            type: \"number\",\n            value: newDevice.temperature,\n            onChange: e => handleNewDeviceFieldChange('temperature', parseFloat(e.target.value) || 0),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseAddDialog,\n          variant: \"outlined\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseAddDialog,\n          variant: \"contained\",\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WJq4GkyfVfMuf60b34DNsDG7Q1A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Container","Typography","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Dialog","DialogTitle","DialogContent","DialogActions","Button","Slider","Box","TextField","Stack","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","devices","setDevices","openDialog","setOpenDialog","selectedDeviceIndex","setSelectedDeviceIndex","openAddDialog","setOpenAddDialog","newDevice","setNewDevice","Did","location","waterFlow","pressure","temperature","fetch","then","res","json","data","catch","err","console","error","interval","setInterval","prevDevices","map","device","parseFloat","Math","random","toFixed","clearInterval","handleRowClick","index","handleDialogClose","handleSliderChange","field","newValue","updated","selectedDevice","handleOpenAddDialog","handleCloseAddDialog","handleNewDeviceFieldChange","value","prev","method","headers","body","JSON","stringify","log","maxWidth","sx","marginTop","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","mb","onClick","component","hover","style","cursor","open","onClose","fullWidth","dividers","mt","min","max","step","onChange","e","val","spacing","label","target","type","_c","$RefreshReg$"],"sources":["/Users/shashank/Downloads/Reddy/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  Container,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  Slider,\n  Box,\n  TextField,\n  Stack\n} from '@mui/material';\n\nfunction App() {\n  // Devices fetched from the DB on mount\n  const [devices, setDevices] = useState([]);\n\n  // Dialog to edit sensor data\n  const [openDialog, setOpenDialog] = useState(false);\n  const [selectedDeviceIndex, setSelectedDeviceIndex] = useState(null);\n\n  // Dialog to add a new device\n  const [openAddDialog, setOpenAddDialog] = useState(false);\n\n  // The new device being typed in the form\n  const [newDevice, setNewDevice] = useState({\n    Did: '',\n    location: '',\n    waterFlow: 0,\n    pressure: 0,\n    temperature: 0,\n  });\n\n  /**\n   * 1) Fetch from DB on first render\n   */\n  useEffect(() => {\n    fetch('http://localhost:5001/api/devices')\n      .then((res) => res.json())\n      .then((data) => setDevices(data))\n      .catch((err) => console.error('Error fetching devices:', err));\n  }, []);\n\n  /**\n   * 2) Random update effect (every second)\n   *    Remove or modify if not needed.\n   */\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setDevices((prevDevices) =>\n        prevDevices.map((device) => ({\n          ...device,\n          waterFlow: parseFloat((device.waterFlow + (Math.random() * 2 - 1)).toFixed(2)),\n          pressure: parseFloat((device.pressure + (Math.random() * 2 - 1)).toFixed(2)),\n          temperature: parseFloat((device.temperature + (Math.random() * 2 - 1)).toFixed(2)),\n        }))\n      );\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  // --------------------------\n  // Sensor-editing dialog\n  // --------------------------\n  const handleRowClick = (index) => {\n    setSelectedDeviceIndex(index);\n    setOpenDialog(true);\n  };\n\n  const handleDialogClose = () => {\n    setOpenDialog(false);\n  };\n\n  // Slider changes for the selected device\n  const handleSliderChange = (field, newValue) => {\n    setDevices((prevDevices) => {\n      const updated = [...prevDevices];\n      updated[selectedDeviceIndex] = {\n        ...updated[selectedDeviceIndex],\n        [field]: newValue,\n      };\n      return updated;\n    });\n  };\n\n  const selectedDevice =\n    selectedDeviceIndex !== null ? devices[selectedDeviceIndex] : null;\n\n  // --------------------------\n  // \"Add Device\" dialog\n  // --------------------------\n  const handleOpenAddDialog = () => {\n    setNewDevice({\n      Did: '',\n      location: '',\n      waterFlow: 0,\n      pressure: 0,\n      temperature: 0,\n    });\n    setOpenAddDialog(true);\n  };\n\n  const handleCloseAddDialog = () => {\n    setOpenAddDialog(false);\n  };\n\n  /**\n   * Called whenever any field in newDevice changes.\n   * 1) Update local `newDevice`.\n   * 2) Immediately POST to the server (creating or re-creating).\n   *    - In reality, you might want to do a \"PUT / upsert\" or add a debounce.\n   */\n  const handleNewDeviceFieldChange = (field, value) => {\n    setNewDevice((prev) => {\n      const updated = { ...prev, [field]: value };\n\n      // We only attempt to POST if Did and location are not empty\n      // (to avoid sending incomplete data for every single keystroke).\n      // You can remove or adjust this condition if desired.\n      if (updated.Did && updated.location) {\n        fetch('http://localhost:5001/api/devices', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(updated),\n        })\n          .then((res) => res.json())\n          .then((data) => {\n            console.log('Dynamic DB update response:', data);\n          })\n          .catch((err) => console.error('Error dynamically creating device:', err));\n      }\n\n      return updated;\n    });\n  };\n\n  return (\n    <Container maxWidth=\"md\" sx={{ marginTop: 4 }}>\n      <Typography variant=\"h4\" gutterBottom>\n        Water Management System\n      </Typography>\n\n      {/* Button to open \"Add Device\" dialog */}\n      <Button variant=\"contained\" sx={{ mb: 2 }} onClick={handleOpenAddDialog}>\n        Add Device\n      </Button>\n\n      {/* Table of current devices */}\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell><strong>Device ID</strong></TableCell>\n              <TableCell><strong>Location</strong></TableCell>\n              <TableCell><strong>Water Flow (L/s)</strong></TableCell>\n              <TableCell><strong>Pressure (psi)</strong></TableCell>\n              <TableCell><strong>Temperature (°C)</strong></TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {devices.map((device, index) => (\n              <TableRow\n                key={device.Did}\n                hover\n                style={{ cursor: 'pointer' }}\n                onClick={() => handleRowClick(index)}\n              >\n                <TableCell>{device.Did}</TableCell>\n                <TableCell>{device.location}</TableCell>\n                <TableCell>{device.waterFlow}</TableCell>\n                <TableCell>{device.pressure}</TableCell>\n                <TableCell>{device.temperature}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      {/* Dialog for adjusting sensor data */}\n      <Dialog open={openDialog} onClose={handleDialogClose} fullWidth maxWidth=\"sm\">\n        <DialogTitle>Adjust Sensor Data</DialogTitle>\n        <DialogContent dividers>\n          {selectedDevice && (\n            <>\n              <Box sx={{ mt: 2 }}>\n                <Typography gutterBottom>Water Flow (L/s)</Typography>\n                <Slider\n                  value={selectedDevice.waterFlow}\n                  min={0}\n                  max={500}\n                  step={1}\n                  onChange={(e, val) => handleSliderChange('waterFlow', val)}\n                />\n                <Typography variant=\"body2\">\n                  Current: {selectedDevice.waterFlow.toFixed(2)}\n                </Typography>\n              </Box>\n\n              <Box sx={{ mt: 4 }}>\n                <Typography gutterBottom>Pressure (psi)</Typography>\n                <Slider\n                  value={selectedDevice.pressure}\n                  min={0}\n                  max={150}\n                  step={1}\n                  onChange={(e, val) => handleSliderChange('pressure', val)}\n                />\n                <Typography variant=\"body2\">\n                  Current: {selectedDevice.pressure.toFixed(2)}\n                </Typography>\n              </Box>\n\n              <Box sx={{ mt: 4 }}>\n                <Typography gutterBottom>Temperature (°C)</Typography>\n                <Slider\n                  value={selectedDevice.temperature}\n                  min={0}\n                  max={100}\n                  step={1}\n                  onChange={(e, val) => handleSliderChange('temperature', val)}\n                />\n                <Typography variant=\"body2\">\n                  Current: {selectedDevice.temperature.toFixed(2)}\n                </Typography>\n              </Box>\n            </>\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleDialogClose} variant=\"contained\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Dialog for ADDING a new device */}\n      <Dialog open={openAddDialog} onClose={handleCloseAddDialog} fullWidth maxWidth=\"sm\">\n        <DialogTitle>Add New Device</DialogTitle>\n        <DialogContent dividers>\n          {/* As user types, we call handleNewDeviceFieldChange immediately */}\n          <Stack spacing={2} sx={{ mt: 2 }}>\n            <TextField\n              label=\"Device ID\"\n              value={newDevice.Did}\n              onChange={(e) => handleNewDeviceFieldChange('Did', e.target.value)}\n              fullWidth\n            />\n            <TextField\n              label=\"Location\"\n              value={newDevice.location}\n              onChange={(e) => handleNewDeviceFieldChange('location', e.target.value)}\n              fullWidth\n            />\n            <TextField\n              label=\"Water Flow (L/s)\"\n              type=\"number\"\n              value={newDevice.waterFlow}\n              onChange={(e) =>\n                handleNewDeviceFieldChange('waterFlow', parseFloat(e.target.value) || 0)\n              }\n              fullWidth\n            />\n            <TextField\n              label=\"Pressure (psi)\"\n              type=\"number\"\n              value={newDevice.pressure}\n              onChange={(e) =>\n                handleNewDeviceFieldChange('pressure', parseFloat(e.target.value) || 0)\n              }\n              fullWidth\n            />\n            <TextField\n              label=\"Temperature (°C)\"\n              type=\"number\"\n              value={newDevice.temperature}\n              onChange={(e) =>\n                handleNewDeviceFieldChange('temperature', parseFloat(e.target.value) || 0)\n              }\n              fullWidth\n            />\n          </Stack>\n        </DialogContent>\n        <DialogActions>\n          {/* You can decide what \"Add\" does now—maybe just close the dialog */}\n          <Button onClick={handleCloseAddDialog} variant=\"outlined\">\n            Cancel\n          </Button>\n          <Button onClick={handleCloseAddDialog} variant=\"contained\">\n            Done\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Container>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}