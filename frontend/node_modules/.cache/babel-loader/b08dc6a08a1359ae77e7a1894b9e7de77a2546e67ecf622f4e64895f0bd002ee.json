{"ast":null,"code":"var _jsxFileName = \"/Users/shashank/Downloads/Reddy/frontend/src/DeviceAnalytics.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, CircularProgress, Button } from '@mui/material';\nimport { Line, Bar, Pie } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, BarElement, ArcElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, ArcElement, Title, Tooltip, Legend);\nfunction DeviceAnalytics({\n  deviceId\n}) {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [chartData, setChartData] = useState({});\n  const [chartType, setChartType] = useState('line'); // 'line', 'bar', 'pie'\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const response = await fetch(`http://localhost:5001/api/devices/${deviceId}`);\n        const device = await response.json();\n        const labels = Array.from(new Array(24), (_, index) => `${index} hour`);\n        const temperatureData = device.temperature || [];\n        const ranges = {\n          low: 0,\n          medium: 0,\n          high: 0\n        };\n        temperatureData.forEach(temp => {\n          if (temp < 10) ranges.low++;else if (temp < 20) ranges.medium++;else ranges.high++;\n        });\n        const pieData = {\n          labels: ['Low (<10°C)', 'Medium (10-20°C)', 'High (>20°C)'],\n          datasets: [{\n            label: 'Temperature Ranges',\n            data: [ranges.low, ranges.medium, ranges.high],\n            backgroundColor: ['rgba(255, 99, 132, 0.5)', 'rgba(54, 162, 235, 0.5)', 'rgba(255, 206, 86, 0.5)'],\n            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)'],\n            borderWidth: 1\n          }]\n        };\n        setChartData({\n          lineBarData: {\n            labels,\n            datasets: [{\n              label: 'Water Flow (L/s)',\n              data: waterFlowData,\n              borderColor: 'rgb(75, 192, 192)',\n              backgroundColor: 'rgba(75, 192, 192, 0.5)'\n            }, {\n              label: 'Pressure (psi)',\n              data: pressureData,\n              borderColor: 'rgb(255, 99, 132)',\n              backgroundColor: 'rgba(255, 99, 132, 0.5)'\n            }, {\n              label: 'Temperature (°C)',\n              data: temperatureData,\n              borderColor: 'rgb(53, 162, 235)',\n              backgroundColor: 'rgba(53, 162, 235, 0.5)'\n            }]\n          },\n          pieData\n        });\n      } catch (error) {\n        console.error(\"Error fetching device data:\", error);\n      }\n      setLoading(false);\n    };\n    fetchData();\n  }, [deviceId]);\n  const changeChart = type => {\n    setChartType(type);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 68\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: [\"Device Analytics: \", deviceId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: () => changeChart('line'),\n      sx: {\n        mr: 1\n      },\n      children: \"Line Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: () => changeChart('bar'),\n      sx: {\n        mr: 1\n      },\n      children: \"Histogram\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: () => changeChart('pie'),\n      children: \"Pie Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), chartType === 'line' && /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData.lineBarData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 32\n    }, this), chartType === 'bar' && /*#__PURE__*/_jsxDEV(Bar, {\n      data: chartData.lineBarData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 31\n    }, this), chartType === 'pie' && /*#__PURE__*/_jsxDEV(Pie, {\n      data: chartData.pieData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(DeviceAnalytics, \"GnO1Y144ig6a/TISJ0D73jPL8ys=\");\n_c = DeviceAnalytics;\nexport default DeviceAnalytics;\nvar _c;\n$RefreshReg$(_c, \"DeviceAnalytics\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","CircularProgress","Button","Line","Bar","Pie","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","BarElement","ArcElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","DeviceAnalytics","deviceId","_s","loading","setLoading","chartData","setChartData","chartType","setChartType","fetchData","response","fetch","device","json","labels","Array","from","_","index","temperatureData","temperature","ranges","low","medium","high","forEach","temp","pieData","datasets","label","data","backgroundColor","borderColor","borderWidth","lineBarData","waterFlowData","pressureData","error","console","changeChart","type","sx","display","justifyContent","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","gutterBottom","onClick","mr","_c","$RefreshReg$"],"sources":["/Users/shashank/Downloads/Reddy/frontend/src/DeviceAnalytics.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Typography,\n  CircularProgress,\n  Button\n} from '@mui/material';\nimport { Line, Bar, Pie } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, BarElement, ArcElement, Title, Tooltip, Legend } from 'chart.js';\n\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, ArcElement, Title, Tooltip, Legend);\n\nfunction DeviceAnalytics({ deviceId }) {\n  const [loading, setLoading] = useState(true);\n  const [chartData, setChartData] = useState({});\n  const [chartType, setChartType] = useState('line'); // 'line', 'bar', 'pie'\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const response = await fetch(`http://localhost:5001/api/devices/${deviceId}`);\n        const device = await response.json();\n        const labels = Array.from(new Array(24), (_, index) => `${index} hour`);\n        const temperatureData = device.temperature || [];\n\n        const ranges = { low: 0, medium: 0, high: 0 };\n        temperatureData.forEach(temp => {\n          if (temp < 10) ranges.low++;\n          else if (temp < 20) ranges.medium++;\n          else ranges.high++;\n        });\n\n        const pieData = {\n          labels: ['Low (<10°C)', 'Medium (10-20°C)', 'High (>20°C)'],\n          datasets: [{\n            label: 'Temperature Ranges',\n            data: [ranges.low, ranges.medium, ranges.high],\n            backgroundColor: ['rgba(255, 99, 132, 0.5)', 'rgba(54, 162, 235, 0.5)', 'rgba(255, 206, 86, 0.5)'],\n            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)'],\n            borderWidth: 1,\n          }]\n        };\n\n        setChartData({\n          lineBarData: {\n            labels,\n            datasets: [\n            {\n              label: 'Water Flow (L/s)',\n              data: waterFlowData,\n              borderColor: 'rgb(75, 192, 192)',\n              backgroundColor: 'rgba(75, 192, 192, 0.5)',\n            },\n            {\n              label: 'Pressure (psi)',\n              data: pressureData,\n              borderColor: 'rgb(255, 99, 132)',\n              backgroundColor: 'rgba(255, 99, 132, 0.5)',\n            },\n            {\n              label: 'Temperature (°C)',\n              data: temperatureData,\n              borderColor: 'rgb(53, 162, 235)',\n              backgroundColor: 'rgba(53, 162, 235, 0.5)',\n            }\n          ]\n          },\n          pieData\n        });\n      } catch (error) {\n        console.error(\"Error fetching device data:\", error);\n      }\n      setLoading(false);\n    };\n\n    fetchData();\n  }, [deviceId]);\n\n  const changeChart = (type) => {\n    setChartType(type);\n  };\n\n  if (loading) {\n    return <Box sx={{ display: 'flex', justifyContent: 'center' }}><CircularProgress /></Box>;\n  }\n\n  return (\n    <Box>\n      <Typography variant=\"h6\" gutterBottom>\n        Device Analytics: {deviceId}\n      </Typography>\n\n      {/* Buttons to switch charts */}\n      <Button variant=\"contained\" onClick={() => changeChart('line')} sx={{ mr: 1 }}>Line Chart</Button>\n      <Button variant=\"contained\" onClick={() => changeChart('bar')} sx={{ mr: 1 }}>Histogram</Button>\n      <Button variant=\"contained\" onClick={() => changeChart('pie')}>Pie Chart</Button>\n\n      {/* Conditionally render charts */}\n      {chartType === 'line' && <Line data={chartData.lineBarData} />}\n      {chartType === 'bar' && <Bar data={chartData.lineBarData} />}\n      {chartType === 'pie' && <Pie data={chartData.pieData} />}\n    </Box>\n  );\n}\n\nexport default DeviceAnalytics;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}