{"ast":null,"code":"var _jsxFileName = \"/Users/shashank/Downloads/Reddy/frontend/src/DeviceAnalytics.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, CircularProgress, Button } from '@mui/material';\nimport { Line, Bar, Pie } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, BarElement, ArcElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, ArcElement, Title, Tooltip, Legend);\nfunction DateFilter({\n  onDateChange\n}) {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(\"\");\n  const handleDateChange = event => {\n    const newDate = event.target.value;\n    setSelectedDate(newDate);\n    onDateChange(newDate);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"datePicker\",\n      children: \"Select Date: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      id: \"datePicker\",\n      value: selectedDate,\n      onChange: handleDateChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }, this);\n}\n_s(DateFilter, \"X+343bWD8vGlMCAq1//cBGL6GcI=\");\n_c = DateFilter;\nfunction DeviceAnalytics({\n  deviceId\n}) {\n  _s2();\n  const [loading, setLoading] = useState(true);\n  const [chartData, setChartData] = useState({});\n  const [chartType, setChartType] = useState('line'); // Options: 'line', 'bar', 'pie'\n  const [selectedDate, setSelectedDate] = useState(\"\");\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const response = await fetch(`http://localhost:5001/api/devices/${deviceId}`);\n        const device = await response.json();\n        if (device && device.data) {\n          filterData(device);\n        } else {\n          console.error(\"No data received for device:\", deviceId);\n          setChartData({});\n        }\n      } catch (error) {\n        console.error(\"Error fetching device data:\", error);\n      }\n      setLoading(false);\n    };\n    fetchData();\n  }, [deviceId, selectedDate]);\n  const filterData = device => {\n    const filteredData = device.data.filter(d => new Date(d.timestamp).toISOString().split('T')[0] === selectedDate);\n    if (!filteredData.length) {\n      console.error(\"No data available for selected date:\", selectedDate);\n      setChartData({});\n      return;\n    }\n    const labels = filteredData.map(d => `${new Date(d.timestamp).getHours()}:00`);\n    const waterFlowData = filteredData.map(d => d.waterFlow);\n    const pressureData = filteredData.map(d => d.pressure);\n    const temperatureData = filteredData.map(d => d.temperature);\n    const data = {\n      labels,\n      datasets: [{\n        label: 'Water Flow (L/s)',\n        data: waterFlowData,\n        borderColor: 'rgb(75, 192, 192)',\n        backgroundColor: 'rgba(75, 192, 192, 0.5)'\n      }, {\n        label: 'Pressure (psi)',\n        data: pressureData,\n        borderColor: 'rgb(255, 99, 132)',\n        backgroundColor: 'rgba(255, 99, 132, 0.5)'\n      }, {\n        label: 'Temperature (Â°C)',\n        data: temperatureData,\n        borderColor: 'rgb(53, 162, 235)',\n        backgroundColor: 'rgba(53, 162, 235, 0.5)'\n      }]\n    };\n    setChartData(data);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: [\"Device Analytics: \", deviceId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DateFilter, {\n      onDateChange: setSelectedDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: () => setChartType('line'),\n      sx: {\n        mr: 1\n      },\n      children: \"Line Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: () => setChartType('bar'),\n      sx: {\n        mr: 1\n      },\n      children: \"Bar Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: () => setChartType('pie'),\n      children: \"Pie Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), chartData.labels && chartData.labels.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [chartType === 'line' && /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 36\n      }, this), chartType === 'bar' && /*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 35\n      }, this), chartType === 'pie' && /*#__PURE__*/_jsxDEV(Pie, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"No data available for the selected date or device.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n_s2(DeviceAnalytics, \"Z5kApzpnMg/oO4+G+x4hc2Exnp0=\");\n_c2 = DeviceAnalytics;\nexport default DeviceAnalytics;\nvar _c, _c2;\n$RefreshReg$(_c, \"DateFilter\");\n$RefreshReg$(_c2, \"DeviceAnalytics\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","CircularProgress","Button","Line","Bar","Pie","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","BarElement","ArcElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","Fragment","_Fragment","register","DateFilter","onDateChange","_s","selectedDate","setSelectedDate","handleDateChange","event","newDate","target","value","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","_c","DeviceAnalytics","deviceId","_s2","loading","setLoading","chartData","setChartData","chartType","setChartType","fetchData","response","fetch","device","json","data","filterData","console","error","filteredData","filter","d","Date","timestamp","toISOString","split","length","labels","map","getHours","waterFlowData","waterFlow","pressureData","pressure","temperatureData","temperature","datasets","label","borderColor","backgroundColor","variant","gutterBottom","onClick","sx","mr","_c2","$RefreshReg$"],"sources":["/Users/shashank/Downloads/Reddy/frontend/src/DeviceAnalytics.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Typography,\n  CircularProgress,\n  Button\n} from '@mui/material';\nimport { Line, Bar, Pie } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, BarElement, ArcElement, Title, Tooltip, Legend } from 'chart.js';\n\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, ArcElement, Title, Tooltip, Legend);\n\nfunction DateFilter({ onDateChange }) {\n    const [selectedDate, setSelectedDate] = useState(\"\");\n  \n    const handleDateChange = (event) => {\n      const newDate = event.target.value;\n      setSelectedDate(newDate);\n      onDateChange(newDate);\n    };\n  \n    return (\n      <div>\n        <label htmlFor=\"datePicker\">Select Date: </label>\n        <input\n          type=\"date\"\n          id=\"datePicker\"\n          value={selectedDate}\n          onChange={handleDateChange}\n        />\n      </div>\n    );\n  }\n  \n\nfunction DeviceAnalytics({ deviceId }) {\n  const [loading, setLoading] = useState(true);\n  const [chartData, setChartData] = useState({});\n  const [chartType, setChartType] = useState('line'); // Options: 'line', 'bar', 'pie'\n  const [selectedDate, setSelectedDate] = useState(\"\");\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const response = await fetch(`http://localhost:5001/api/devices/${deviceId}`);\n        const device = await response.json();\n        if (device && device.data) {\n          filterData(device);\n        } else {\n          console.error(\"No data received for device:\", deviceId);\n          setChartData({});\n        }\n      } catch (error) {\n        console.error(\"Error fetching device data:\", error);\n      }\n      setLoading(false);\n    };\n\n    fetchData();\n  }, [deviceId, selectedDate]);\n\n  const filterData = (device) => {\n    const filteredData = device.data.filter(d =>\n      new Date(d.timestamp).toISOString().split('T')[0] === selectedDate\n    );\n\n    if (!filteredData.length) {\n      console.error(\"No data available for selected date:\", selectedDate);\n      setChartData({});\n      return;\n    }\n\n    const labels = filteredData.map(d => `${new Date(d.timestamp).getHours()}:00`);\n    const waterFlowData = filteredData.map(d => d.waterFlow);\n    const pressureData = filteredData.map(d => d.pressure);\n    const temperatureData = filteredData.map(d => d.temperature);\n\n    const data = {\n      labels,\n      datasets: [\n        {\n          label: 'Water Flow (L/s)',\n          data: waterFlowData,\n          borderColor: 'rgb(75, 192, 192)',\n          backgroundColor: 'rgba(75, 192, 192, 0.5)',\n        },\n        {\n          label: 'Pressure (psi)',\n          data: pressureData,\n          borderColor: 'rgb(255, 99, 132)',\n          backgroundColor: 'rgba(255, 99, 132, 0.5)',\n        },\n        {\n          label: 'Temperature (Â°C)',\n          data: temperatureData,\n          borderColor: 'rgb(53, 162, 235)',\n          backgroundColor: 'rgba(53, 162, 235, 0.5)',\n        }\n      ]\n    };\n    setChartData(data);\n  };\n\n  if (loading) {\n    return <CircularProgress />;\n  }\n\n  return (\n    <Box>\n      <Typography variant=\"h6\" gutterBottom>\n        Device Analytics: {deviceId}\n      </Typography>\n      <DateFilter onDateChange={setSelectedDate} />\n      <Button variant=\"contained\" onClick={() => setChartType('line')} sx={{ mr: 1 }}>Line Chart</Button>\n      <Button variant=\"contained\" onClick={() => setChartType('bar')} sx={{ mr: 1 }}>Bar Chart</Button>\n      <Button variant=\"contained\" onClick={() => setChartType('pie')}>Pie Chart</Button>\n      {chartData.labels && chartData.labels.length > 0 ? (\n        <>\n          {chartType === 'line' && <Line data={chartData} />}\n          {chartType === 'bar' && <Bar data={chartData} />}\n          {chartType === 'pie' && <Pie data={chartData} />}\n        </>\n      ) : (\n        <Typography>No data available for the selected date or device.</Typography>\n      )}\n    </Box>\n  );\n}\n\nexport default DeviceAnalytics;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}